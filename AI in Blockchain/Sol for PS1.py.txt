import pandas as pd
import numpy as np
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt


np.random.seed(42)  # For reproducibility
n_transactions = 1000


data = {
    'transaction_id': np.arange(1, n_transactions + 1),
    'amount': np.random.lognormal(mean=5, sigma=1.0, size=n_transactions),  # Simulated amounts
    'fee': np.random.lognormal(mean=1, sigma=0.2, size=n_transactions),      # Simulated fees
    'timestamp': pd.date_range('2023-01-01', periods=n_transactions, freq='T')
}

df = pd.DataFrame(data)


scaler = StandardScaler()
df_scaled = scaler.fit_transform(df[['amount', 'fee']])


model = IsolationForest(n_estimators=100, contamination=0.05)  # 5% contamination as outliers
df['anomaly'] = model.fit_predict(df_scaled)


anomalies = df[df['anomaly'] == -1]


print(f"Number of anomalies detected: {len(anomalies)}")

plt.figure(figsize=(10, 6))
plt.scatter(df['timestamp'], df['amount'], c=df['anomaly'], cmap='coolwarm')
plt.title('Transaction Amount with Anomalies')
plt.xlabel('Timestamp')
plt.ylabel('Amount')
plt.colorbar(label='Anomaly (-1=Anomaly, 1=Normal)')
plt.show()